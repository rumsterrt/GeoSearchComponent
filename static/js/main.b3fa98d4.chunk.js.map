{"version":3,"sources":["store/index.js","reducers/index.js","components/ui/searchInput.js","components/ui/tabWrapper.js","utils/api.js","components/searchTab/index.js","components/formUI/FieldWithError.js","components/formUI/TextField.js","components/editTab/form.js","components/editTab/index.js","components/viewTab/index.js","pages/main/index.js","App.js","serviceWorker.js","index.js"],"names":["context","React","createContext","Provider","Consumer","reducer","state","form","country","city","postal_code","street_address","street_number","room_type","room","isLoading","pickedOption","action","payload","type","data","Wrapper","styled","div","Popper","theme","palette","background","paper","ListBox","ul","Option","li","hover","selected","SearchInput","initOptions","initPicked","loadOptions","onClickOption","props","useState","value","setValue","options","setOptions","anchorEl","setAnchorEl","popupOpen","setPopupOpen","searchTimeout","setSearchTimeout","setPickedOption","setIsLoading","open","Boolean","ClickAwayListener","onClickAway","TextField","onFocus","label","address","onChange","e","newValue","target","clearTimeout","length","newTimeout","setTimeout","then","catch","finally","ref","role","style","width","clientWidth","placement","map","option","index","key","onClick","PaperOrigin","spacing","TabWrapper","children","service","window","google","maps","places","PlacesService","document","createElement","dataParser","relativeTypes","relative","locality","route","reduce","acc","item","isRelative","_intersection","types","long_name","SearchPage","useContext","storeContext","dispatch","enqueueSnackbar","useSnackbar","_get","fullWidth","query","Promise","resolve","reject","findPlaceFromQuery","fields","response","status","PlacesServiceStatus","OVER_QUERY_LIMIT","formatted_address","id","place_id","searchQuery","variant","placeId","getDetails","Typography","marginTop","gutterTop","name","render","className","field","hasError","_","get","touched","errors","Box","error","color","hint","FieldWithError","AddressSchema","Yup","shape","required","EditForm","onSubmit","formik","initialValues","validationSchema","enableReinitialize","Grid","container","xs","Button","EditAddress","values","ViewTab","display","alignItems","flexDirection","gutterBottom","HorizontalLinearStepper","isMobile","useMediaQuery","activeStep","setActiveStep","steps","stepContent","next","back","reset","getStepsContent","handleNext","prevActiveStep","content","justifyContent","disabled","Stepper","orientation","Step","StepLabel","StepContent","customTheme","createMuiTheme","App","matches","useReducer","maxSnack","Container","maxWidth","disableGutters","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3fa98d4.chunk.js","sourcesContent":["import React from 'react'\n\nconst context = React.createContext({})\n\nexport const Provider = context.Provider\nexport const Consumer = context.Consumer\n\nexport default context\n","export const getInitState = () => ({\n    form: {\n        country: '',\n        city: '',\n        postal_code: '',\n        street_address: '',\n        street_number: '',\n        room_type: '',\n        room: '',\n\n        isLoading: false,\n    },\n    pickedOption: {},\n})\n\nexport const reducer = (state = getInitState(), action) => {\n    const payload = action.payload\n\n    switch (action.type) {\n        case 'SET_ADDRESS_REQUEST':\n            return {\n                ...state,\n                form: {\n                    ...state.form,\n                    isLoading: true,\n                },\n            }\n        case 'SET_ADDRESS_SUCCESS':\n            return {\n                ...state,\n                form: {\n                    ...state.form,\n                    ...payload.data,\n                    isLoading: false,\n                },\n                pickedOption: payload.pickedOption,\n            }\n        case 'SET_ADDRESS_FAILURE':\n            return {\n                ...state,\n                form: {\n                    ...state.form,\n                    isLoading: true,\n                },\n                pickedOption: {},\n            }\n\n        case 'RESET_DATA':\n            return getInitState()\n\n        default:\n            return state\n    }\n}\n","import React from 'react'\n\nimport TextField from '@material-ui/core/TextField'\n\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    position: relative;\n`\n\nconst Popper = styled.div`\n    ${({ theme }) => `\n        z-index: 1;\n        position: absolute;\n        box-sizing: border-box;\n        top: 100%;\n        right: 0;\n        left: 0;\n        background-color: ${theme.palette.background.paper};\n        max-height: 300px;\n        overflow-y: auto;\n        box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 1px -1px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 1px 3px 0px;\n    `}\n`\n\nconst ListBox = styled.ul`\n    list-style: none;\n    margin: 0;\n    padding: 8px 0px;\n    position: relative;\n`\n\nconst Option = styled.li`\n    ${({ theme }) => `\n        word-break: break-all;\n        min-height: 48px;\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        cursor: pointer;\n        padding-top: 6px;\n        box-sizing: border-box;\n        outline: 0;\n        padding-bottom: 6px;\n        padding-left: 16px;\n        padding-right: 16px;\n        &:hover {\n            background-color: ${theme.palette.action.hover};\n        },\n        &:active {\n            background-color: ${theme.palette.action.selected},\n        },\n    `}\n`\n\nconst SearchInput = ({ initOptions = null, initPicked = {}, loadOptions, onClickOption, ...props }) => {\n    const [value, setValue] = React.useState('')\n    const [options, setOptions] = React.useState(initOptions)\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const [popupOpen, setPopupOpen] = React.useState(null)\n    const [searchTimeout, setSearchTimeout] = React.useState(null)\n    //option that was picked, view it inside input, while new typing start\n    const [pickedOption, setPickedOption] = React.useState(initPicked)\n    const [isLoading, setIsLoading] = React.useState(false)\n\n    const handleChange = e => {\n        setPickedOption({})\n        const newValue = e.target.value\n        setValue(newValue)\n        searchTimeout && clearTimeout(searchTimeout)\n\n        if (newValue.length <= 2) {\n            return\n        }\n\n        const newTimeout = setTimeout(() => {\n            setIsLoading(true)\n            loadOptions(newValue)\n                .then(options => {\n                    setOptions(options)\n                })\n                .catch(e => {\n                    setOptions(null)\n                })\n                .finally(() => {\n                    setSearchTimeout(null)\n                    setIsLoading(false)\n                })\n        }, 1000)\n        setSearchTimeout(newTimeout)\n    }\n\n    const open = (Boolean(anchorEl) && options && popupOpen) || isLoading\n\n    return (\n        <ClickAwayListener\n            onClickAway={() => {\n                setPopupOpen(false)\n            }}\n        >\n            <Wrapper>\n                <TextField\n                    onFocus={() => setPopupOpen(true)}\n                    label=\"Search\"\n                    type=\"search\"\n                    value={pickedOption.address || value}\n                    onChange={handleChange}\n                    ref={setAnchorEl}\n                    {...props}\n                />\n                {open && (\n                    <Popper\n                        role=\"presentation\"\n                        style={{\n                            width: anchorEl ? anchorEl.clientWidth : null,\n                        }}\n                        placement=\"bottom\"\n                        open\n                        anchorEl={anchorEl}\n                    >\n                        <ListBox>\n                            {isLoading && <Option>Loading...</Option>}\n                            {options && options.length === 0 && !isLoading && <Option>Empty</Option>}\n                            {options &&\n                                options.map((option, index) => (\n                                    <Option\n                                        key={index}\n                                        onClick={() => {\n                                            setPickedOption(option)\n                                            setPopupOpen(false)\n                                            onClickOption(option)\n                                        }}\n                                    >\n                                        {option.address}\n                                    </Option>\n                                ))}\n                        </ListBox>\n                    </Popper>\n                )}\n            </Wrapper>\n        </ClickAwayListener>\n    )\n}\n\nexport default SearchInput\n","import React from 'react'\n\nimport PaperOrigin from '@material-ui/core/Paper'\nimport styled from 'styled-components'\n\nconst Wrapper = styled(PaperOrigin)`\n    ${({ theme }) => `\n        margin-top: ${theme.spacing(2)}px;\n        margin-bottom: ${theme.spacing(3)}px;\n        padding: ${theme.spacing(2)}px;\n    `}\n`\n\nconst TabWrapper = ({ children }) => {\n    return <Wrapper>{children}</Wrapper>\n}\n\nexport default TabWrapper\n","import _intersection from 'lodash/intersection'\nimport _get from 'lodash/get'\n\nconst service = new window.google.maps.places.PlacesService(document.createElement('div'))\n\nconst dataParser = (() => {\n    const relativeTypes = ['country', 'locality', 'postal_code', 'street_address', 'route', 'street_number', 'room']\n    const relative = {\n        country: 'country',\n        locality: 'city',\n        postal_code: 'postal_code',\n        route: 'street_address',\n        street_address: 'street_address',\n        street_number: 'street_number',\n        room: 'room',\n    }\n\n    return data => {\n        return data.reduce((acc, item) => {\n            const isRelative = _intersection(item.types, relativeTypes)[0]\n            if (!isRelative) {\n                return acc\n            }\n\n            return { ...acc, [relative[isRelative]]: item.long_name }\n        }, {})\n    }\n})()\n\nexport const searchQuery = query =>\n    new Promise((resolve, reject) => {\n        service.findPlaceFromQuery(\n            {\n                query,\n                fields: ['formatted_address', 'place_id'],\n            },\n            (response, status) => {\n                if (status === window.google.maps.places.PlacesServiceStatus.OVER_QUERY_LIMIT) {\n                    reject()\n                }\n                resolve(\n                    (response || []).map(({ formatted_address, place_id }) => ({\n                        address: formatted_address,\n                        id: place_id,\n                    })),\n                )\n            },\n        )\n    })\n\nexport const getAddressData = placeId =>\n    new Promise((resolve, reject) => {\n        service.getDetails({ placeId, fields: ['address_component'] }, (response, status) => {\n            if (status === window.google.maps.places.PlacesServiceStatus.OVER_QUERY_LIMIT) {\n                reject()\n            }\n            resolve(dataParser(_get(response, 'address_components', [])))\n        })\n    })\n","import React from 'react'\nimport _get from 'lodash/get'\nimport { SearchInput } from 'components/ui'\nimport { searchQuery, getAddressData } from 'utils/api'\nimport { TabWrapper } from 'components/ui'\nimport Typography from '@material-ui/core/Typography'\nimport { useSnackbar } from 'notistack'\n\nimport storeContext from 'store'\n\nconst SearchPage = () => {\n    const [state, dispatch] = React.useContext(storeContext)\n    const { enqueueSnackbar } = useSnackbar()\n\n    const onClickOption = option => {\n        dispatch({\n            type: 'SET_ADDRESS_REQUEST',\n        })\n        getAddressData(option.id)\n            .then(data => {\n                dispatch({\n                    type: 'SET_ADDRESS_SUCCESS',\n                    payload: { data, pickedOption: option },\n                })\n            })\n            .catch(e => {\n                enqueueSnackbar('Google Place API limits ', { variant: 'error' })\n                dispatch({\n                    type: 'SET_ADDRESS_FAILURE',\n                })\n            })\n    }\n\n    const onLoadOptions = query => {\n        return searchQuery(query).catch(e => {\n            enqueueSnackbar('Google Place API limits ', { variant: 'error' })\n            return []\n        })\n    }\n\n    const pickedOption = _get(state, 'pickedOption', {})\n\n    return (\n        <TabWrapper>\n            <SearchInput\n                fullWidth\n                initPicked={pickedOption}\n                loadOptions={onLoadOptions}\n                onClickOption={onClickOption}\n                label={'Search address'}\n            />\n            {pickedOption.address && (\n                <Typography style={{ marginTop: '20px' }} gutterTop>{`You choose: ${pickedOption.address}`}</Typography>\n            )}\n        </TabWrapper>\n    )\n}\n\nexport default SearchPage\n","import React from 'react'\nimport _ from 'lodash'\nimport { Field } from 'formik'\n\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nexport default ({ style, name, render, className }) => (\n    <Field\n        name={name}\n        render={({ field, form }) => {\n            const hasError = _.get(form.touched, name) && _.get(form.errors, name)\n\n            return (\n                <Box style={style} className={className}>\n                    {render({\n                        field: {\n                            ...field,\n                            error: hasError,\n                        },\n                        form,\n                    })}\n                    {hasError && (\n                        <Typography color=\"error\" variant=\"caption\">\n                            {_.get(form.errors, name)}\n                        </Typography>\n                    )}\n                </Box>\n            )\n        }}\n    />\n)\n","import React from 'react'\nimport FieldWithError from './FieldWithError'\nimport TextField from '@material-ui/core/TextField'\n\nexport default ({ style, name, hint, error, ...props }) => (\n    <FieldWithError\n        style={style}\n        hint={hint}\n        name={name}\n        render={({ field }) => (\n            <TextField {...field} {...props} error={!field || !!field.error} />\n        )}\n    />\n)\n","import React from 'react'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { TextField } from 'components/formUI'\n\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\n\nconst AddressSchema = () =>\n    Yup.object().shape({\n        country: Yup.string().required('Required'),\n        city: Yup.string().required('Required'),\n        postal_code: Yup.string().required('Required'),\n        street_address: Yup.string().required('Required'),\n        street_number: Yup.string().required('Required'),\n        room_type: Yup.string().required('Required'),\n        room: Yup.string().required('Required'),\n    })\n\nconst EditForm = ({ address = {}, onSubmit }) => {\n    const formik = {\n        initialValues: {\n            country: address.country || '',\n            city: address.city || '',\n            postal_code: address.postal_code || '',\n            street_address: address.street_address || '',\n            street_number: address.street_number || '',\n            room_type: address.room_type || '',\n            room: address.room || '',\n        },\n        onSubmit,\n        validationSchema: AddressSchema,\n        enableReinitialize: true,\n    }\n\n    return (\n        <Formik {...formik}>\n            <Form>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <TextField id=\"country\" name=\"country\" label=\"Country\" type=\"text\" fullWidth required />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField id=\"city\" name=\"city\" label=\"City\" type=\"text\" fullWidth required />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            id=\"postal_code\"\n                            name=\"postal_code\"\n                            label=\"Postal Code\"\n                            type=\"number\"\n                            fullWidth\n                            required\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            id=\"street_address\"\n                            name=\"street_address\"\n                            label=\"Street Name\"\n                            type=\"text\"\n                            fullWidth\n                            required\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            id=\"street_number\"\n                            name=\"street_number\"\n                            label=\"Street Number\"\n                            type=\"number\"\n                            fullWidth\n                            required\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField id=\"room_type\" name=\"room_type\" label=\"Room Type\" type=\"text\" fullWidth required />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField id=\"room\" name=\"room\" label=\"Room Number\" type=\"number\" fullWidth required />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                            Sumbit\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Form>\n        </Formik>\n    )\n}\n\nexport default EditForm\n","import React from 'react'\nimport Form from './form'\nimport { TabWrapper } from 'components/ui'\n\nimport storeContext from 'store'\n\nconst EditAddress = ({ onSubmit = () => {} }) => {\n    const [state, dispatch] = React.useContext(storeContext)\n    const handleSubmit = values => {\n        dispatch({\n            type: 'SET_ADDRESS_SUCCESS',\n            payload: { data: values },\n        })\n        onSubmit()\n    }\n\n    return (\n        <TabWrapper>\n            <Form address={state.form || {}} onSubmit={handleSubmit} />\n        </TabWrapper>\n    )\n}\n\nexport default EditAddress\n","import React from 'react'\nimport { TabWrapper } from 'components/ui'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\n\nimport storeContext from 'store'\n\nconst ViewTab = () => {\n    const [{ form }] = React.useContext(storeContext)\n\n    return (\n        <TabWrapper>\n            <Box width=\"100%\" display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n                <Typography variant=\"h6\">Country:</Typography>\n                <Typography gutterBottom variant=\"body1\">\n                    {form.country}\n                </Typography>\n\n                <Typography variant=\"h6\">City:</Typography>\n                <Typography gutterBottom variant=\"body1\">\n                    {form.city}\n                </Typography>\n\n                <Typography variant=\"h6\">Postal code:</Typography>\n                <Typography gutterBottom variant=\"body1\">\n                    {form.postal_code}\n                </Typography>\n\n                <Typography variant=\"h6\">Street address:</Typography>\n                <Typography gutterBottom variant=\"body1\">\n                    {form.street_address}\n                </Typography>\n\n                <Typography variant=\"h6\">Street number:</Typography>\n                <Typography gutterBottom variant=\"body1\">\n                    {form.street_number}\n                </Typography>\n\n                <Typography variant=\"h6\">Room type:</Typography>\n                <Typography gutterBottom variant=\"body1\">\n                    {form.room_type}\n                </Typography>\n\n                <Typography variant=\"h6\">Room:</Typography>\n                <Typography gutterBottom variant=\"body1\">\n                    {form.room}\n                </Typography>\n            </Box>\n        </TabWrapper>\n    )\n}\n\nexport default ViewTab\n","import React from 'react'\nimport SearchTab from 'components/searchTab'\nimport EditTab from 'components/editTab'\nimport ViewTab from 'components/viewTab'\nimport storeContext from 'store'\n\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport StepContent from '@material-ui/core/StepContent'\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nfunction getSteps() {\n    return ['Search address', 'Edit address structure', 'You object!']\n}\n\nfunction getStepsContent(activeStep) {\n    switch (activeStep) {\n        case 0:\n            return { render: props => <SearchTab {...props} />, next: true }\n        case 1:\n            return { render: props => <EditTab {...props} />, back: true }\n        case 2:\n            return { render: props => <ViewTab {...props} />, back: true, reset: true }\n        default:\n            return { render: <div>Nothing</div> }\n    }\n}\n\nexport default function HorizontalLinearStepper() {\n    const [state, dispatch] = React.useContext(storeContext)\n    const isMobile = useMediaQuery('(max-width: 600px)')\n\n    const [activeStep, setActiveStep] = React.useState(0)\n\n    const steps = getSteps()\n    const stepContent = getStepsContent(activeStep)\n\n    const handleNext = () => {\n        setActiveStep(prevActiveStep => prevActiveStep + 1)\n    }\n\n    const handleBack = () => {\n        setActiveStep(prevActiveStep => prevActiveStep - 1)\n    }\n\n    const handleReset = () => {\n        dispatch({\n            type: 'RESET_DATA',\n        })\n        setActiveStep(0)\n    }\n\n    const content = (\n        <>\n            {stepContent.render({ onSubmit: handleNext })}\n            <Box display=\"flex\" width=\"100%\" alignItems=\"center\" justifyContent=\"center\">\n                {stepContent.reset && <Button onClick={handleReset}>Reset</Button>}\n                {stepContent.back && (\n                    <Button disabled={activeStep === 0} onClick={handleBack}>\n                        Back\n                    </Button>\n                )}\n                {stepContent.next && (\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                        Next\n                    </Button>\n                )}\n            </Box>\n        </>\n    )\n\n    return (\n        <Box width=\"100%\">\n            <Stepper activeStep={activeStep} orientation={isMobile ? 'vertical' : 'horizontal'}>\n                {steps.map((label, index) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                        {isMobile && activeStep === index && <StepContent>{content}</StepContent>}\n                    </Step>\n                ))}\n            </Stepper>\n            {!isMobile && content}\n        </Box>\n    )\n}\n","import React from 'react'\nimport { Provider } from './store'\nimport { reducer, getInitState } from './reducers'\nimport { MainPage } from 'pages'\nimport { SnackbarProvider } from 'notistack'\n\nimport { ThemeProvider } from 'styled-components'\nimport { createMuiTheme, ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nconst customTheme = createMuiTheme()\n\nfunction App() {\n    const matches = useMediaQuery('(min-width:600px)')\n    const useState = React.useReducer(reducer, getInitState())\n\n    return (\n        <Provider value={useState}>\n            <MuiThemeProvider theme={customTheme}>\n                <ThemeProvider theme={customTheme}>\n                    <SnackbarProvider maxSnack={3}>\n                        <Container maxWidth={matches ? 'md' : false} disableGutters={!matches}>\n                            <MainPage />\n                        </Container>\n                    </SnackbarProvider>\n                </ThemeProvider>\n            </MuiThemeProvider>\n        </Provider>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}